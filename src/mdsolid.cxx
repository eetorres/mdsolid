// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "../include/mdsolid.h"
int _stp, _n_ep; 
//Ca_LinePoint *P;

Fl_Double_Window *w_implant=(Fl_Double_Window *)0;

fl_md_sim *viz3d=(fl_md_sim *)0;

Fl_Button *init=(Fl_Button *)0;

static void cb_init(Fl_Button*, void*) {
  //int _x, _y, _z;
//double _rc = pow(2,1.0/6.0);
// Constructor con propiedades del material:
// Numero Atomico
// Masa Atomica
// Constante de Red
// Simbolo Quimico
// Estructura Cristalina
//viz3d->mdResetAll();
//
//viz3d->mdSimInit();
//viz3d->mdSetLattConst(1.0);
//viz3d->mdSetRandScale(_rs->value());
//viz3d->mdSetSeed((int)_s->value());

//viz3d->mdRangeVelDis((real)_rvd->value());
//viz3d->mdMaxVelSpl((int)_lvd->value());

// Size of the crystal of Iron
//viz3d->mdSetCellXYZ(10,10,10);
//_x = (int)_ux->value();
//_y = (int)_uy->value();
//_z = (int)_uz->value();
//viz3d->mdSetCellXYZ(_x,_y,_z);
// Radio de corte para la interaccion Fe-Fe (A)
//viz3d->mdSetRc(3.0,0.2);
//viz3d->mdSetNumNucl((int)_nk->value());

// Time step

//viz3d->mdSetTimeStep((real)_ts->value()); // 1e-5
//viz3d->mdSetMotionStep((real)_rs->value()); // 1e-1

// Initial atom positions
viz3d->set_intial_conditions();
//SHOW SOME INFORMATION//
viz3d->show_summary();

//OUTPUT FILE//
/*viz3d->mdWriteInfoFile("readme");*/
/////////////////////////////////
//numpart=md->mdGetSysSize();

//viz3d->mdComputeStartMotionTaget();
//viz3d->mdSetEpoch((int)_ne->value());
viz3d->redraw();
play->activate();
}

Fl_Button *play=(Fl_Button *)0;

static void cb_play(Fl_Button*, void*) {
  //
  _n_ep=0;
  real _dat=0, /*_max=0,*/ _tot=0;
  Ca_LinePoint *_P_u=0, *_P_k=0, *_P_t=0/*, *_P_v=0*/;
  //
  _n_ep = viz3d->get_epoch_number();
  set_k_axis();
  set_u_axis();
  set_t_axis();
  set_m_axis();
  //
  //
  //viz3d->integration_verlet();
  viz3d->motion_step();
  //viz3d->eval_properties();
 
  _dat = viz3d->get_k_energy();
  Ca_Canvas::current(_k_ener); 
  _k_e->minimum(0.998*_dat);
  _k_e->maximum(1.002*_dat);
  _tot = _dat;
  //
  _dat = viz3d->get_u_energy();
  Ca_Canvas::current(_k_ener);
  _u_e->minimum(0.998*_dat);
  _u_e->maximum(1.002*_dat); 
  _tot += _dat;
  //_u_e->minimum(_max*1.02);
  //_u_e->maximum(_max*0.98);
  //
  Ca_Canvas::current(_t_ener); 
  _t_e->minimum(_tot*0.998);
  _t_e->maximum(_tot*1.002);
  /*
   for(_stp=0; _stp<viz3d->get_epoch_number(); _stp++){
    viz3d->mdComputeStartMotionTarget();
    viz3d->redraw();
    Fl::check();
  }
  */
  
  for(_stp=0; _stp<viz3d->get_epoch_number(); _stp++){
  	viz3d->motion_step();
  	//viz3d->eval_properties();
	_dat = viz3d->get_k_energy(); // Data
	_tot = _dat;
	//cout<<"Kinetic Energy ="<<dat<<endl;
	// Start Graphic
	if(_dat>0){
		Ca_Canvas::current(_k_ener); 
		_k_ener->current();
		_P_k=new Ca_LinePoint(_P_k,_stp,_dat,0,FL_GREEN,FL_BLACK);
		//viz3d->redraw();
		if((real)_k_e->maximum()<=_dat*1.02)
			_k_e->maximum(_dat*1.02);
		if((real)_k_e->minimum()>=_dat*0.98)
			_k_e->minimum(_dat*0.98);
	}
	_dat = viz3d->get_u_energy(); // Data
	_tot += _dat;
	//cout<<"Potential Energy ="<<_dat<<endl;
	// Graphic
	//if(_dat){ 
		Ca_Canvas::current(_u_ener);
		_P_u=new Ca_LinePoint(_P_u,_stp,_dat,0,FL_GREEN,FL_BLACK);
		//viz3d->redraw();
		if((real)_u_e->maximum()<=_dat)
			_u_e->maximum(_dat*1.02);
		if((real)_u_e->minimum()>=_dat)
			_u_e->minimum(_dat*0.98);
	//}
		Ca_Canvas::current(_t_ener);
		_P_t=new Ca_LinePoint(_P_t,_stp,_tot,0,FL_GREEN,FL_BLACK);
		//viz3d->redraw();
		if((real)_t_e->maximum()<=_tot*1.02)
			_t_e->maximum(_tot*1.02);
		if((real)_t_e->minimum()>=_tot*0.98)
			_t_e->minimum(_tot*0.98);
	
	//viz3d->mdEvalVelDis();
	//Ca_Canvas::current(_m_vel);
	//_m_vel->clear();
	//for(int _i=0; _i<viz3d->get_veldist_size(); _i++){
		//_dat = viz3d->mdVelDis(_i);
		//_P_v=new Ca_LinePoint(_P_v,_i,_dat,0,FL_GREEN,FL_BLACK);
	//}
	viz3d->redraw();
	// End Graphic
	Fl::check();
  };
}

Fl_Button *stop=(Fl_Button *)0;

static void cb_stop(Fl_Button*, void*) {
  _stp=viz3d->get_epoch_number();
//viz3d->mdWriteRange("range.xyz", 6);
}

Fl_Slider *_z=(Fl_Slider *)0;

static void cb__z(Fl_Slider*, void*) {
  viz3d->szoom(_z->value());
viz3d->redraw();
}

static void cb_1(Fl_Button*, void*) {
  _z->value(0.5);
viz3d->szoom(_z->value());
viz3d->redraw();
}

static void cb_11(Fl_Button*, void*) {
  _z->value(1.0);
viz3d->szoom(_z->value());
viz3d->redraw();
}

static void cb_2(Fl_Button*, void*) {
  _z->value(2.0);
viz3d->szoom(_z->value());
viz3d->redraw();
}

Fl_Button *_x_f=(Fl_Button *)0;

static void cb__x_f(Fl_Button*, void*) {
  viz3d->v_angle(0.0);
viz3d->h_angle(90.0);
viz3d->redraw();
}

Fl_Button *_y_f=(Fl_Button *)0;

static void cb__y_f(Fl_Button*, void*) {
  viz3d->v_angle(90.0);
viz3d->h_angle(90.0);
viz3d->redraw();
}

Fl_Button *_z_f=(Fl_Button *)0;

static void cb__z_f(Fl_Button*, void*) {
  viz3d->v_angle(90.0);
viz3d->h_angle(0.0);
viz3d->redraw();
}

static void cb_Close(Fl_Button*, void*) {
  _stp=viz3d->get_epoch_number();
  w_implant->hide();
}

Fl_Button *eos=(Fl_Button *)0;

static void cb_eos(Fl_Button*, void*) {
  //
  // Initial atom positions
  viz3d->eval_eos_lattice();
}

static Fl_Group *_gph_box=(Fl_Group *)0;

Fl_Group *_u_gph=(Fl_Group *)0;

Ca_Canvas *_u_ener=(Ca_Canvas *)0;

Ca_X_Axis *_u_t=(Ca_X_Axis *)0;

Ca_Y_Axis *_u_e=(Ca_Y_Axis *)0;

Fl_Group *_k_gph=(Fl_Group *)0;

Ca_Canvas *_k_ener=(Ca_Canvas *)0;

Ca_X_Axis *_k_t=(Ca_X_Axis *)0;

Ca_Y_Axis *_k_e=(Ca_Y_Axis *)0;

Fl_Group *_t_gph=(Fl_Group *)0;

Ca_Canvas *_t_ener=(Ca_Canvas *)0;

Ca_X_Axis *_t_t=(Ca_X_Axis *)0;

Ca_Y_Axis *_t_e=(Ca_Y_Axis *)0;

Fl_Group *_max_gph=(Fl_Group *)0;

Ca_Canvas *_m_vel=(Ca_Canvas *)0;

Ca_X_Axis *_m_v=(Ca_X_Axis *)0;

Ca_Y_Axis *_m_f=(Ca_Y_Axis *)0;

int main(int argc, char **argv) {
  { w_implant = new Fl_Double_Window(680, 625, "Solid State Molecular Dynamic Simulations");
    { viz3d = new fl_md_sim(210, 3, 465, 415, "There is not OpenGL available");
      viz3d->box(FL_THIN_DOWN_BOX);
      viz3d->color(FL_BACKGROUND_COLOR);
      viz3d->selection_color(FL_BACKGROUND_COLOR);
      viz3d->labeltype(FL_NORMAL_LABEL);
      viz3d->labelfont(0);
      viz3d->labelsize(14);
      viz3d->labelcolor(FL_FOREGROUND_COLOR);
      viz3d->align(Fl_Align(FL_ALIGN_CENTER));
      viz3d->when(FL_WHEN_RELEASE);
      Fl_Group::current()->resizable(viz3d);
    } // fl_md_sim* viz3d
    { Fl_Group* o = new Fl_Group(5, 3, 200, 426);
      { Fl_Group* o = new Fl_Group(5, 18, 200, 403, "Control panel");
        { Fl_Group* o = new Fl_Group(11, 235, 189, 28, "set  /  run  /  stop");
          o->box(FL_THIN_DOWN_BOX);
          { init = new Fl_Button(51, 238, 34, 21, "@->|");
            init->callback((Fl_Callback*)cb_init);
          } // Fl_Button* init
          { play = new Fl_Button(90, 238, 34, 21, "@>");
            play->callback((Fl_Callback*)cb_play);
            play->deactivate();
          } // Fl_Button* play
          { stop = new Fl_Button(129, 238, 34, 21, "@square");
            stop->labelsize(10);
            stop->callback((Fl_Callback*)cb_stop);
          } // Fl_Button* stop
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(10, 282, 190, 86, "View");
          o->box(FL_THIN_DOWN_BOX);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
          { _z = new Fl_Slider(63, 298, 127, 14, "Zoom");
            _z->type(1);
            _z->minimum(0.1);
            _z->maximum(2);
            _z->step(0.02);
            _z->value(1);
            _z->callback((Fl_Callback*)cb__z);
            _z->align(Fl_Align(FL_ALIGN_LEFT));
          } // Fl_Slider* _z
          { Fl_Button* o = new Fl_Button(63, 315, 21, 15, "1:2");
            o->labelfont(1);
            o->labelsize(12);
            o->callback((Fl_Callback*)cb_1);
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(115, 315, 21, 15, "1:1");
            o->labelfont(1);
            o->labelsize(12);
            o->callback((Fl_Callback*)cb_11);
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(169, 315, 21, 14, "2:1");
            o->labelfont(1);
            o->labelsize(12);
            o->callback((Fl_Callback*)cb_2);
          } // Fl_Button* o
          { _x_f = new Fl_Button(69, 340, 34, 21, "X");
            _x_f->labelfont(1);
            _x_f->callback((Fl_Callback*)cb__x_f);
          } // Fl_Button* _x_f
          { _y_f = new Fl_Button(108, 340, 34, 21, "Y");
            _y_f->labelfont(1);
            _y_f->callback((Fl_Callback*)cb__y_f);
          } // Fl_Button* _y_f
          { _z_f = new Fl_Button(147, 340, 34, 21, "Z");
            _z_f->labelfont(1);
            _z_f->callback((Fl_Callback*)cb__z_f);
          } // Fl_Button* _z_f
          o->end();
        } // Fl_Group* o
        { Fl_Button* o = new Fl_Button(125, 374, 77, 21, "Close");
          o->callback((Fl_Callback*)cb_Close);
          o->when(FL_WHEN_RELEASE_ALWAYS);
        } // Fl_Button* o
        { Fl_Box* o = new Fl_Box(20, 401, 20, 20, "U");
          o->labelcolor((Fl_Color)2);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(180, 401, 20, 20, "K");
          o->labelcolor((Fl_Color)2);
        } // Fl_Box* o
        { eos = new Fl_Button(55, 374, 34, 21, "@>");
          eos->callback((Fl_Callback*)cb_eos);
        } // Fl_Button* eos
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(5, 422, 200, 5);
        o->box(FL_ENGRAVED_FRAME);
        o->end();
        Fl_Group::current()->resizable(o);
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    { _gph_box = new Fl_Group(5, 434, 670, 179);
      _gph_box->box(FL_THIN_DOWN_BOX);
      _gph_box->color(FL_FOREGROUND_COLOR);
      { _u_gph = new Fl_Group(8, 439, 226, 81);
        _u_gph->box(FL_BORDER_BOX);
        _u_gph->color(FL_FOREGROUND_COLOR);
        _u_gph->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        { Fl_Box* o = new Fl_Box(10, 439, 222, 81);
          o->box(FL_THIN_DOWN_BOX);
          o->color(FL_FOREGROUND_COLOR);
        } // Fl_Box* o
        { _u_ener = new Ca_Canvas(62, 446, 165, 48);
          _u_ener->box(FL_FLAT_BOX);
          _u_ener->color(FL_FOREGROUND_COLOR);
          _u_ener->selection_color(FL_BACKGROUND_COLOR);
          _u_ener->labeltype(FL_NORMAL_LABEL);
          _u_ener->labelfont(0);
          _u_ener->labelsize(14);
          _u_ener->labelcolor(FL_FOREGROUND_COLOR);
          _u_ener->align(Fl_Align(FL_ALIGN_CENTER));
          _u_ener->when(FL_WHEN_RELEASE);
        } // Ca_Canvas* _u_ener
        { _u_t = new Ca_X_Axis(51, 497, 176, 20);
          _u_t->box(FL_FLAT_BOX);
          _u_t->color(FL_FOREGROUND_COLOR);
          _u_t->selection_color(FL_BACKGROUND_COLOR);
          _u_t->labeltype(FL_NORMAL_LABEL);
          _u_t->labelfont(0);
          _u_t->labelsize(46);
          _u_t->labelcolor((Fl_Color)2);
          _u_t->align(Fl_Align(FL_ALIGN_CENTER));
          _u_t->when(FL_WHEN_RELEASE);
        } // Ca_X_Axis* _u_t
        { _u_e = new Ca_Y_Axis(16, 444, 46, 56);
          _u_e->box(FL_FLAT_BOX);
          _u_e->color(FL_FOREGROUND_COLOR);
          _u_e->selection_color(FL_BACKGROUND_COLOR);
          _u_e->labeltype(FL_NORMAL_LABEL);
          _u_e->labelfont(0);
          _u_e->labelsize(14);
          _u_e->labelcolor((Fl_Color)2);
          _u_e->align(Fl_Align(FL_ALIGN_CENTER));
          _u_e->when(FL_WHEN_RELEASE);
        } // Ca_Y_Axis* _u_e
        _u_gph->end();
      } // Fl_Group* _u_gph
      { _k_gph = new Fl_Group(234, 439, 226, 81);
        _k_gph->box(FL_BORDER_BOX);
        _k_gph->color(FL_FOREGROUND_COLOR);
        _k_gph->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        { Fl_Box* o = new Fl_Box(237, 439, 223, 81);
          o->box(FL_THIN_DOWN_BOX);
          o->color(FL_FOREGROUND_COLOR);
        } // Fl_Box* o
        { _k_ener = new Ca_Canvas(287, 446, 165, 48);
          _k_ener->box(FL_FLAT_BOX);
          _k_ener->color(FL_FOREGROUND_COLOR);
          _k_ener->selection_color(FL_BACKGROUND_COLOR);
          _k_ener->labeltype(FL_NORMAL_LABEL);
          _k_ener->labelfont(0);
          _k_ener->labelsize(14);
          _k_ener->labelcolor(FL_FOREGROUND_COLOR);
          _k_ener->align(Fl_Align(FL_ALIGN_CENTER));
          _k_ener->when(FL_WHEN_RELEASE);
        } // Ca_Canvas* _k_ener
        { _k_t = new Ca_X_Axis(277, 497, 175, 20);
          _k_t->box(FL_FLAT_BOX);
          _k_t->color(FL_FOREGROUND_COLOR);
          _k_t->selection_color(FL_BACKGROUND_COLOR);
          _k_t->labeltype(FL_NORMAL_LABEL);
          _k_t->labelfont(0);
          _k_t->labelsize(46);
          _k_t->labelcolor((Fl_Color)2);
          _k_t->align(Fl_Align(FL_ALIGN_CENTER));
          _k_t->when(FL_WHEN_RELEASE);
        } // Ca_X_Axis* _k_t
        { _k_e = new Ca_Y_Axis(242, 444, 45, 56);
          _k_e->box(FL_FLAT_BOX);
          _k_e->color(FL_FOREGROUND_COLOR);
          _k_e->selection_color(FL_BACKGROUND_COLOR);
          _k_e->labeltype(FL_NORMAL_LABEL);
          _k_e->labelfont(0);
          _k_e->labelsize(14);
          _k_e->labelcolor((Fl_Color)2);
          _k_e->align(Fl_Align(FL_ALIGN_CENTER));
          _k_e->when(FL_WHEN_RELEASE);
        } // Ca_Y_Axis* _k_e
        _k_gph->end();
      } // Fl_Group* _k_gph
      { _t_gph = new Fl_Group(9, 525, 451, 81);
        _t_gph->box(FL_BORDER_BOX);
        _t_gph->color(FL_FOREGROUND_COLOR);
        _t_gph->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        { Fl_Box* o = new Fl_Box(10, 525, 450, 81);
          o->box(FL_THIN_DOWN_BOX);
          o->color(FL_FOREGROUND_COLOR);
        } // Fl_Box* o
        { _t_ener = new Ca_Canvas(61, 532, 390, 48);
          _t_ener->box(FL_FLAT_BOX);
          _t_ener->color(FL_FOREGROUND_COLOR);
          _t_ener->selection_color(FL_BACKGROUND_COLOR);
          _t_ener->labeltype(FL_NORMAL_LABEL);
          _t_ener->labelfont(0);
          _t_ener->labelsize(14);
          _t_ener->labelcolor(FL_FOREGROUND_COLOR);
          _t_ener->align(Fl_Align(FL_ALIGN_CENTER));
          _t_ener->when(FL_WHEN_RELEASE);
        } // Ca_Canvas* _t_ener
        { _t_t = new Ca_X_Axis(51, 583, 400, 18);
          _t_t->box(FL_FLAT_BOX);
          _t_t->color(FL_FOREGROUND_COLOR);
          _t_t->selection_color(FL_BACKGROUND_COLOR);
          _t_t->labeltype(FL_NORMAL_LABEL);
          _t_t->labelfont(0);
          _t_t->labelsize(46);
          _t_t->labelcolor((Fl_Color)2);
          _t_t->align(Fl_Align(FL_ALIGN_CENTER));
          _t_t->when(FL_WHEN_RELEASE);
        } // Ca_X_Axis* _t_t
        { _t_e = new Ca_Y_Axis(16, 530, 45, 56);
          _t_e->box(FL_FLAT_BOX);
          _t_e->color(FL_FOREGROUND_COLOR);
          _t_e->selection_color(FL_BACKGROUND_COLOR);
          _t_e->labeltype(FL_NORMAL_LABEL);
          _t_e->labelfont(0);
          _t_e->labelsize(14);
          _t_e->labelcolor((Fl_Color)2);
          _t_e->align(Fl_Align(FL_ALIGN_CENTER));
          _t_e->when(FL_WHEN_RELEASE);
        } // Ca_Y_Axis* _t_e
        _t_gph->end();
      } // Fl_Group* _t_gph
      { _max_gph = new Fl_Group(465, 439, 205, 167);
        _max_gph->box(FL_BORDER_BOX);
        _max_gph->color(FL_FOREGROUND_COLOR);
        _max_gph->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        { Fl_Box* o = new Fl_Box(468, 439, 202, 167);
          o->box(FL_THIN_DOWN_BOX);
          o->color(FL_FOREGROUND_COLOR);
        } // Fl_Box* o
        { _m_vel = new Ca_Canvas(473, 441, 192, 142);
          _m_vel->box(FL_FLAT_BOX);
          _m_vel->color(FL_FOREGROUND_COLOR);
          _m_vel->selection_color(FL_BACKGROUND_COLOR);
          _m_vel->labeltype(FL_NORMAL_LABEL);
          _m_vel->labelfont(0);
          _m_vel->labelsize(14);
          _m_vel->labelcolor(FL_FOREGROUND_COLOR);
          _m_vel->align(Fl_Align(FL_ALIGN_CENTER));
          _m_vel->when(FL_WHEN_RELEASE);
        } // Ca_Canvas* _m_vel
        { _m_v = new Ca_X_Axis(470, 582, 199, 21);
          _m_v->box(FL_FLAT_BOX);
          _m_v->color(FL_FOREGROUND_COLOR);
          _m_v->selection_color(FL_BACKGROUND_COLOR);
          _m_v->labeltype(FL_NORMAL_LABEL);
          _m_v->labelfont(0);
          _m_v->labelsize(46);
          _m_v->labelcolor((Fl_Color)2);
          _m_v->align(Fl_Align(FL_ALIGN_CENTER));
          _m_v->when(FL_WHEN_RELEASE);
        } // Ca_X_Axis* _m_v
        { _m_f = new Ca_Y_Axis(470, 443, 2, 152);
          _m_f->box(FL_FLAT_BOX);
          _m_f->color(FL_FOREGROUND_COLOR);
          _m_f->selection_color(FL_BACKGROUND_COLOR);
          _m_f->labeltype(FL_NORMAL_LABEL);
          _m_f->labelfont(0);
          _m_f->labelsize(14);
          _m_f->labelcolor((Fl_Color)2);
          _m_f->align(Fl_Align(FL_ALIGN_CENTER));
          _m_f->when(FL_WHEN_RELEASE);
        } // Ca_Y_Axis* _m_f
        _max_gph->end();
      } // Fl_Group* _max_gph
      _gph_box->end();
    } // Fl_Group* _gph_box
    w_implant->end();
  } // Fl_Double_Window* w_implant
  w_implant->show(argc, argv);
  return Fl::run();
}

void set_k_axis() {
  //_k_e->minimum(0.0);
  //_k_e->maximum(1.0);
  
  _k_e->label_format("%g");
  _k_e->minor_grid_color(fl_gray_ramp(5));
  _k_e->major_grid_color(fl_gray_ramp(10));
  _k_e->label_grid_color(fl_gray_ramp(10));
  _k_e->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _k_e->major_step(1);
  _k_e->label_step(1);
  _k_e->label_size(9);
  _k_e->axis_color(FL_WHITE);
  
  _k_t->minimum(0.0);
  _k_t->maximum(21.0);
  _k_t->label_format("%g");
  _k_t->minor_grid_color(fl_gray_ramp(5));
  _k_t->major_grid_color(fl_gray_ramp(10));
  _k_t->label_grid_color(fl_gray_ramp(10));
  _k_t->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _k_t->major_step(1);
  _k_t->label_step(1);
  _k_t->label_size(9);
  _k_t->axis_color(FL_WHITE);
  
  _k_ener->clear();
  _k_t->maximum(_n_ep);
}

void set_u_axis() {
  _u_e->minimum(-1.0);
  _u_e->maximum(1.0);
  
  _u_e->label_format("%g");
  _u_e->minor_grid_color(fl_gray_ramp(5));
  _u_e->major_grid_color(fl_gray_ramp(10));
  _u_e->label_grid_color(fl_gray_ramp(10));
  _u_e->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _u_e->major_step(1);
  _u_e->label_step(1);
  _u_e->label_size(9);
  _u_e->axis_color(FL_WHITE);
  
  _u_t->minimum(0.0);
  _u_t->maximum(21.0);
  _u_t->label_format("%g");
  _u_t->minor_grid_color(fl_gray_ramp(5));
  _u_t->major_grid_color(fl_gray_ramp(10));
  _u_t->label_grid_color(fl_gray_ramp(10));
  _u_t->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _u_t->major_step(1);
  _u_t->label_step(1);
  _u_t->label_size(9);
  _u_t->axis_color(FL_WHITE);
  
  _u_ener->clear();
  _u_t->maximum(_n_ep);
}

void set_t_axis() {
  //_t_e->minimum(0.0);
  //_t_e->maximum(1.0);
  
  _t_e->label_format("%g");
  _t_e->minor_grid_color(fl_gray_ramp(5));
  _t_e->major_grid_color(fl_gray_ramp(10));
  _t_e->label_grid_color(fl_gray_ramp(10));
  _t_e->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _t_e->major_step(1);
  _t_e->label_step(1);
  _t_e->label_size(9);
  _t_e->axis_color(FL_WHITE);
  
  _t_t->minimum(0.0);
  _t_t->maximum(21.0);
  _t_t->label_format("%g");
  _t_t->minor_grid_color(fl_gray_ramp(5));
  _t_t->major_grid_color(fl_gray_ramp(10));
  _t_t->label_grid_color(fl_gray_ramp(10));
  _t_t->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _t_t->major_step(1);
  _t_t->label_step(1);
  _t_t->label_size(9);
  _t_t->axis_color(FL_WHITE);
  
  _t_ener->clear();
  _t_t->maximum(_n_ep);
}

void set_m_axis() {
  _m_f->minimum(-0.01);
  _m_f->maximum(1.01);
  
  _m_f->label_format("%g");
  _m_f->minor_grid_color(fl_gray_ramp(5));
  _m_f->major_grid_color(fl_gray_ramp(10));
  _m_f->label_grid_color(fl_gray_ramp(10));
  _m_f->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _m_f->major_step(1);
  _m_f->label_step(1);
  _m_f->label_size(9);
  _m_f->axis_color(FL_WHITE);
  
  _m_v->minimum(0.0);
  _m_v->maximum(21.0);
  _m_v->label_format("%g");
  _m_v->minor_grid_color(fl_gray_ramp(5));
  _m_v->major_grid_color(fl_gray_ramp(10));
  _m_v->label_grid_color(fl_gray_ramp(10));
  _m_v->grid_visible(CA_MINOR_GRID|CA_MAJOR_GRID|CA_LABEL_GRID);
  _m_v->major_step(1);
  _m_v->label_step(1);
  _m_v->label_size(9);
  _m_v->axis_color(FL_WHITE);
  
  _m_vel->clear();
  _m_v->maximum(viz3d->get_veldist_size());
}
